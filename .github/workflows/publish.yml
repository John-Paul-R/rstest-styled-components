name: Publish to NPM

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Get package version
        id: package_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version already exists
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          VERSION=${{ steps.package_version.outputs.VERSION }}

          if npm view "${PACKAGE_NAME}@${VERSION}" version 2>/dev/null; then
            echo "Error: Version ${VERSION} already exists on NPM"
            echo "Please update package.json version before publishing"
            exit 1
          fi

          if git tag -l | grep -q "^v${VERSION}$"; then
            echo "Error: Git tag v${VERSION} already exists"
            echo "Please update package.json version before publishing"
            exit 1
          fi

      - name: Build package
        run: pnpm run build

      - name: Publish to NPM
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create and push git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.package_version.outputs.VERSION }}"
          git push origin "v${{ steps.package_version.outputs.VERSION }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.VERSION }}
          release_name: Release v${{ steps.package_version.outputs.VERSION }}
          body: |
            Release notes for version ${{ steps.package_version.outputs.VERSION }}

            Published to NPM as latest version.
          draft: false
          prerelease: false
